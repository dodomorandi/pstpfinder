commit fc3a2ea18137515921d2d97476eae42896e29983
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 27 17:32:29 2011 +0200

    Not changing progressbar if abortFlag is on

commit 7143a619698da6f71880880ad9ea229bbb92398b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 27 17:26:56 2011 +0200

    Avoid showing the MainWindow after quitting

commit 1127095c9457ef02a8cc78f246b44ad3a900cd93
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 27 17:10:09 2011 +0200

    New memory handling
    
    Now it should work perfectly

commit 6bc9a18ad987150db69b6d188c7b21e20a7e77be
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 27 15:30:55 2011 +0200

    Fixed missing mutex

commit 9e81847d53c6175f8dee47dba6d3ed5cb4d4994a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 26 15:03:27 2011 +0200

    Not using interprocess::semaphore anymore
    
    Everything tweaked to use only boost::thread

commit 32ddc8ef643074435ac8c51d3264aad04f4fe36e
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 25 15:35:20 2011 +0200

    Using thread mutexes instead of interprocess
    
    ...but boost 1.36 is needed instead of 1.34

commit 403edbcf4c15e2297ff5eb9a5efe5fc4ea040cd3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 25 15:26:46 2011 +0200

    Fixed memory leaks
    
    Thank you, valgrind

commit 663ab1773c65529670c3afa6bf862f3934a2663c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 20 17:19:23 2011 +0200

    Memory usage is changed dinamically

commit bfaffa9d3906f82173d338f5456d404c994df200
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 20 17:01:25 2011 +0200

    Changed default chunk to 8Mib

commit f5b1f52da15099d9ae0fac102292d697a03b9645
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 19 10:55:07 2011 +0200

    Fixed last stage of status and progress bar

commit dfd87dc8fb745b5084d0cc1c2cd423d92a1c2d0d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 17:41:49 2011 +0200

    Changed behaviour in __calculateAverageStructure

commit 5ad76b4db279e184d30f14e8ec40beb9cb531119
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 17:41:25 2011 +0200

    Missing cached value in Gromacs

commit 21d234a88fe398f68c84bee6e00842bb0feac310
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 16:37:57 2011 +0200

    Hide and show progressAligner instead of progress

commit 6432f6061115cbdd088a990d21dbbce5565d6935
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 16:32:29 2011 +0200

    Adding a status bar

commit 20c43aef7fd3f9e9b66a6b7c6e6d284156ad0e44
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 16:31:00 2011 +0200

    Handling spacing child-by-child
    
    That's because I'm going to add a status bar, and this must have the same width of his parent.

commit 8af3d2cc11c12f94391c8b62d1df111fb27f42ee
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 16:17:17 2011 +0200

    Progressbar always shown in NewAnalysis

commit 4fa3e14b6c4971e7f9ee19d897e4dcb11cc432e2
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 16:14:47 2011 +0200

    Added status description in Pittpi

commit 98de3f96d43abb7b095de44fdfa57647d53d717b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 18 16:13:35 2011 +0200

    Fixed bug in Session::operator =

commit a5e13b11876daaf7fae9c3afa4d2deda0f98826c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 16:21:09 2011 +0200

    Using new SasAnalysis constructor in Gromacs

commit 496879f384037f17e5c80ce39bf1ac1cb6a7925d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 16:20:29 2011 +0200

    Checks for abort flag inside SasAnalysis

commit 6e2ba1891fbe0f6d79ecfc06b7ae005f0616f122
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 16:19:53 2011 +0200

    Changed SasAnalysis constructor parameters

commit b4db2137eb6c5e373011a32d0d3df8ec674b61b6
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 16:19:06 2011 +0200

    Added Gromacs::isAborting

commit bbb9d96881d6773dd1b803b744bc89af24d260cd
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 15:48:39 2011 +0200

    Handling abort in NewAnalysis

commit a6d1dcf9f9092237c7541df6410ff9d79b609799
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 15:48:08 2011 +0200

    Handling abort in Pittpi and Gromacs

commit e0ae5b194cead980254b4c2654a965f720a562da
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 15:45:12 2011 +0200

    Gromacs handled as a pointer in NewAnalysis

commit ed3812edb874871d940e5b644f3c4bb98cb02692
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 15:26:51 2011 +0200

    Gromacs.cpp code reindentation

commit a08d265d447a64923205ffb391b40965c63e9a09
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Oct 17 15:15:40 2011 +0200

    Indent refactory in Gromacs.h

commit bae7d46d35921451d290fd560db0dc379d23a2d1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 14 15:54:39 2011 +0200

    Pittpi code rearranged using one-line method style

commit 400b0ed8b68726c2fda42e89d23bbfe5901f01b3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 14 15:53:45 2011 +0200

    NewAnalysis handles now a pointer to Pittpi
    
    Useful to check and control Pittpi thread status.

commit 37e5259a9be4f8686c0731901b47429160e41c08
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 14 15:37:28 2011 +0200

    Removed unused variables

commit d5fe0508c26b43d39e0c13a002df1fca4e088ca6
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 14 15:07:18 2011 +0200

    One line definitions in NewAnalysis.h
    
    Eclipse likes to split methods and functions also in .h files, but I don't like it.

commit 4a4829fd71e36da876673a49c9a76c95ccba56c0
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 13 14:41:53 2011 +0200

    Fixed race condition
    
    And not removing the sas.psf file anymore when opening a session.

commit e3285ab3ec687ae88b702552c14139c9ae14459e
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 16:02:58 2011 +0200

    Don't create the psf file anymore

commit 2fa33cf7757f3d652e23d49126aeae7570d02b1f
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 16:01:05 2011 +0200

    Changed soma names; Starting using sessions
    
    Now sasAnalysisFileName are changed in sessionFileName.
    Also using the session filename instead of the old psf file.

commit 6a60a82a4d051672b929432c42166cfe2da0b5e2
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 15:53:49 2011 +0200

    Let's close some file handle.
    
    They should close automatically, but it's always a good practice.

commit b971652ea0ecbc2b028d28de71b393165c742fd1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 15:52:09 2011 +0200

    Eof must not be triggered by MetaStream::read

commit 56d4ef13dbe2a4572dc24029c38d50d72344ced3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 13:27:35 2011 +0200

    Removed MetaStream assignment operator
    
    I understood I don't like this behaviour. See the previous commit for details.

commit cc913a314fa617987c8d29016b9edafed575b857
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 13:16:59 2011 +0200

    Using pointers to MetaStream instead of objects
    
    I've never thought that if I use something like:
    
    A& A::operator =(const A& a)
    {
      a->~A();
      new (this) A(a.somearg); // Or also with the copy constructor
      return *this;
    }
    
    ...
    
    A a; // Using the empty constructor
    ...
    a = A(somearg);
    
    ...then I call firstly the empty constructor A, then two times the A(somearg) constructor. It's a waste of resource, then it's better using a pointer to the object if I can't initialize it inside the class initialization.

commit 5f924ce88548ce761920be6e053734f59c478220
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 13:14:32 2011 +0200

    currentPosition not used anymore in MetaStream

commit 95d99c8c900132a55f1e8442975a0faa882e83cc
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 13:10:09 2011 +0200

    Fixed seekg in MetaStream

commit 8eb891304bc273fa9e545489c7d0a2525996c142
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 12 13:06:32 2011 +0200

    Added eofTrigger and fixed eof in MetaStream

commit d62c6369f8f8c43180556f1e12c589f307afa498
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 11 13:18:55 2011 +0200

    Implemented Session in SasAnalysis

commit ac169980a85acf7816594dac86ef7398cd35062b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 11 13:17:50 2011 +0200

    Missing "good-styling-code" break

commit 411ca34ebf5bc6f72361120ebd24b5f72743edbe
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 11 13:16:22 2011 +0200

    Session can now handle raw SAS files

commit 2172a9926b9fc84ddcf4d24d5bb8e4ec5109c81c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 17:11:18 2011 +0200

    Added assignment method to Session

commit 535050b2da7a57d1fa2a98048152698676eb1762
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 17:10:48 2011 +0200

    Added some exceptions when Session is not ready

commit fd375bfff0e0ef76c7fb76c183a3556f12211688
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 17:09:11 2011 +0200

    Added empty constructor and ready parameter

commit bb4183a11719198f5ee77dcb36db4fc3485107e9
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 17:07:30 2011 +0200

    Added fileName as const property in Session

commit e1130e21ec46088d4954c4a8fe9b601a7305feb3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 17:04:33 2011 +0200

    Added some boost-stream parameter to class
    
    Now MetaStream can be used as device source in SasAnalysis.

commit 3edc9c850592533c9b8327a3f987afb54cef706d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 17:03:18 2011 +0200

    tellg and seekg are now boost-like
    
    Yes, I know that tellg doesn't exists. But I WANT a const method for this purpose!

commit bfe410eb837a3c779263fcbf24a643bd31c31c20
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 17:01:09 2011 +0200

    Added copy constructor and changed property
    
    copyStream is not useful anymore. I still need a dump stream because I can't initialize a stream reference against null (that's why I called it nullStream).

commit 506fa1ea3d68270770f68fb3ce1ec5e066369be4
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Oct 7 16:58:40 2011 +0200

    Useless constructor
    
    It also brings some copy-constructor related problems.

commit 46b674f53069f60aa3a305945989a001de6f010d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 6 14:22:39 2011 +0200

    Started implementing Session class in NewAnalysis

commit bf7528fe610de72aceed9ab6172ed04020c139fd
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 6 14:13:14 2011 +0200

    Main function not in global namespace

commit f984286e1cf817c0345ee2f421c2bc56f01c71a9
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 6 13:55:44 2011 +0200

    Added read method to MetaStream

commit 50981f98bebfd7cde859ceac886813b0acf36903
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 6 13:55:00 2011 +0200

    Added getPdbSize and getSasSize to Session

commit ef67c9aa5341d6f749b8c2a21de48a1a5f9a5cf1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 6 13:54:01 2011 +0200

    Session.cpp missed from namespace change

commit 80369c2bf939fd635e8e26455b02362c6b1e9e76
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Oct 6 13:50:30 2011 +0200

    Entire project under PstpFinder namespace
    
    Keep it simple, stupid!

commit 8b7260b2a17a0f8eb78a77cb9f0031cef3ba6ea8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 17:04:23 2011 +0200

    Fixed locale issue

commit bc2b2182a8379298f09a93f3cb54394da58e51f8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 16:52:35 2011 +0200

    Implemented MetaStreams in Session class

commit 3d2a5a57967b7afff1392ef4a04d1bd461e8bc26
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 16:35:55 2011 +0200

    Added assignment operator to MetaStream

commit 346b07004ee5286451234e6b0dcda81ef309b2ac
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 16:27:34 2011 +0200

    Added empty constructor to MetaStream

commit f57d68ffbd90a49eb48fdc733ad89d70ff383cc2
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 16:27:13 2011 +0200

    Added validity check to MetaStream

commit 6c40bd20298b485c1ca233d6d89bb357aa246834
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 16:26:37 2011 +0200

    Merged checkEof in getFromStream

commit 3194aaaa45eeaa9d2d2165dc34fb909287a3a72b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 15:57:08 2011 +0200

    Added constructor for a stream reference

commit e38d31a7e447f7964e93f2c07fcf21053b9ad074
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 15:55:57 2011 +0200

    Property inputStream now is a reference
    
    Useful to reference to a input stream or a local stream.

commit 6d8a6bdc60192471fff2f76689c19a81708f4754
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 15:54:53 2011 +0200

    Fixed issue with end parameter

commit 09fa5cfa9960d4c7782d84969987a93b13b8f9b8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 15:43:37 2011 +0200

    Initial implementation of MetaStream

commit 3251a4b54732a985471ff755cbaf0bb6dde0f0bc
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 11:31:02 2011 +0200

    Added MeaStream class

commit c8c09b8f306766a96c9a7adeac9f9c184e054f57
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 11:25:15 2011 +0200

    Added Session constructor and some get methods

commit ce42a19c891c15883fdfae15ea1c75927cc7697e
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Oct 5 11:25:01 2011 +0200

    Add Session.cpp to Makefile.am

commit bdb0cb00774738f7b5e0dfaa5e72d633216c6cdb
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Oct 4 16:44:20 2011 +0200

    Starting with Session file handler

commit ddf3dd92525197d82a79049d29d9ec54eb9b3910
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Sep 30 17:00:52 2011 +0200

    Using a stream end position instead of eof
    
    It allows to pass custom end for the file.

commit e1a669e4c03a3ebea7a7b5c36b491a1e6aa42023
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Sep 30 11:04:43 2011 +0200

    Wrong indentation

commit ab4c1095e2d6acd083f54d92ba43c05bd48f9440
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Sep 30 10:51:02 2011 +0200

    Code reformatting using Eclipse

commit c98664a223afa65e10f95943881dd9ab0affd561
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Sep 29 17:08:13 2011 +0200

    Pocket operator= must set also group value.
    
    The object is deallocated and a new one is created with the new group value.

commit fbd1f36764c045dd3323b5dcdd5424310685253a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Sep 29 17:06:58 2011 +0200

    Changed pocket end selection behaviour
    
    Pocket ends before the current zero value. Fixed.

commit 76accc12f25a31842e78dc06272a736fe925705a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Sep 28 17:51:30 2011 +0200

    Huge code refactory for fillGroups and pittpiRun
    
    Now the code should work correctly. The problem was about binning; now data seems more coherent and very similar results.

commit e3932b1f284bb2194dfd6888b09ece8e75825a86
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Sep 26 13:24:39 2011 +0200

    Added boost_system to dependencies

commit c59641f75fa61438d681959ed503d6aeda7a0a00
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Sep 8 12:36:20 2011 +0200

    Explicit cast from Glib::ustring to string
    
    It lets the code compile with newer versions of Boost library.

commit 1d0a1cc4aa409894dac5ee14508e39d55aa88ffa
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 25 16:08:39 2011 +0200

    Removed debug output (unwanted)

commit 48435459e6116ad05398081e06a3553508e7aabd
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 25 13:16:58 2011 +0200

    Fixed group list desync

commit 1a391ee2c7964fdc96d3345a0be70c81d8cd4081
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Sat Jul 23 17:19:44 2011 +0200

    Added Group::operator=

commit 58ae6c6ccce1bdaa6c1b23b86a4cb73193ddd17b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Sat Jul 23 17:19:14 2011 +0200

    Changed opertator= to operator<< in Group

commit 7dab6cc86a01630502a9960edf8b111b23d9c2dc
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 21:02:56 2011 +0200

    Rewritten algorithm for pockets elimination

commit c2f3a68fcc2dcf59641f1b27f9c9ffdaf0efdb13
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 21:02:01 2011 +0200

    Added Pittpi::Protein::sortByWidth

commit 2a4847c38e0e879d119413b5ce7dd9e48085ac97
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 20:56:17 2011 +0200

    Ignore unknown atoms for groups making

commit f91f4f5143200acc76d68a17b04785abc777c1e0
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 20:42:07 2011 +0200

    Changed behaviour for Protein::group
    
    Changed from a pointer to a const reference.

commit 65242ee3da80c65d594a017bd226dcc04075478b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 20:05:41 2011 +0200

    Wrong algorithm for groups elimination
    
    I need to rewrite this piece of code. For now I added a note in the code.

commit 9fcdf488be707e67c50ca7496b10ab833bdde461
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 19:39:34 2011 +0200

    Vector assignment is a copy method

commit f94ad36ce82b6c96ffac34117504fcebf3e3810a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 19:26:17 2011 +0200

    Missing preprocessor condition

commit b1a8eae166b2c8203f48727997803b6b35d9381f
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 18:32:36 2011 +0200

    Changed constness for Group reference

commit 7d8d57a062b26de1b2c2267ae749729fe886e3d3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 18:22:19 2011 +0200

    Various code refactory for groups making
    
    The problem was I misunderstood how should the algorithm works to build groups. I rearranged the code to let it work correctly.

commit bb0ad4b30b9aa9bc2d626dce94dd93c9c22fba7e
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 18:19:04 2011 +0200

    Added Group::operator =()
    
    Assignment have to leave reference Atom and Residue unchanged.

commit 38d06d2d3e877c01afbc0da7c09febc9ff5ef4f0
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 18:16:20 2011 +0200

    Improved readability for runSadic

commit fc0686fa7847f0e3c93599529931373aeec0e9f1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 18:13:26 2011 +0200

    Missing Py_Finalize

commit 2ff4a85824fe6717e0b00004feb35f0723d00de8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Jul 21 18:03:22 2011 +0200

    Added Protein operator =
    
    It's needed because of atoms vector. It uses references to the residues vector, so it needs to be reinitialized with a new Protein object. Setting locked = false is sufficient for this purpose.

commit 185d41bddc3bb14afb3ac2af38a2515c5457c397
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jul 12 16:14:52 2011 +0200

    Fixed Sadic algorithm. Now it works!

commit 36adf863f850c6d7ad1cca90b135df4563b052e6
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 11 17:03:02 2011 +0200

    Fixed groups desync against centers

commit d30ee84c57e410983dabc9a19f81d5c7c4384c69
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 11 16:58:28 2011 +0200

    Fixed but with Py_Initialize/Finalize
    
    They should be called in the same thread of the python functions/methods used.

commit 18602f7d556ca19722173bb03be21db4b9414c13
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 11 12:05:19 2011 +0200

    Fixed bug 'bout sidechains centers

commit e87edd34633f35257e1d23d644e0ad8588ead163
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jul 6 16:49:59 2011 +0200

    Fixed uninitializated variables

commit c8a4c125d6276aacdfe70911cf536a3d1ec0e7b2
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jul 6 14:42:53 2011 +0200

    Unlink /tmp/sas.psf if exists

commit 27735515a440b318969a24ea5452d93f5a05cc42
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jul 6 13:33:09 2011 +0200

    Fixed PDB issue

commit f94a8feb1dcd0a2cde56129dcf54e3e298457554
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jul 5 15:52:46 2011 +0200

    Fixed warning and added flow control

commit e8cd08b51d969e5bc322511c9a64a0c5a0c92001
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jul 5 15:39:21 2011 +0200

    Added group erasing algorithm

commit 7519f7bbca5d65ba0c02127a46de6858ce2a5149
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jul 5 13:12:53 2011 +0200

    Integrated Sadic algorithm

commit 075953bf221017710175eaad8e3408664833f950
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jul 5 12:52:10 2011 +0200

    Missing constness for operators

commit 6b5827b6fcb268e5445e627c901d132ad9c95bb1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jul 5 12:48:39 2011 +0200

    Added Atom multiplication

commit ac789f44fa8d128e7bc6a2c4b1d54719157e5c14
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jul 5 12:25:59 2011 +0200

    Splitted makeGroups in two methods

commit ec1b8bd2c918a5e302112460386c5ddb4816abc1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 4 16:08:03 2011 +0200

    Missing compile-time condition

commit 20d08e41c744de232ce3abe9e578dd7a207870c1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 4 15:19:03 2011 +0200

    runSadic returns something useful

commit a90c45eb396f9d14d7e08e13bcac0576bc63f76e
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 4 15:17:54 2011 +0200

    Changed constness for setStatus

commit 8bd5a16459752ce64fb4f6c3fe8c362ff0b1ee9a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Jul 4 15:05:36 2011 +0200

    Fixed different things for PDBs

commit 9ac361ca82d027e476cc7cb42aaafb43debc6348
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Jul 1 14:40:23 2011 +0200

    Removed line (it was for testing purposes)

commit a1a5fbd21f705857da68bb453ca097acf2a52f95
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Jul 1 12:54:26 2011 +0200

    Added scrolling during Sadic algorithm

commit f4d51b43160e8dfb574d93c0b330c4e3c38e3158
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Jul 1 12:36:47 2011 +0200

    First implementation for Sadic algorithm
    
    It's an hybrid C++/Python implementation, because Boost Python library has been used to call Sadic Python functions. Naturally, everything have been written in C++.

commit dac28499ed6f62acaf4a7a5c03af67e0fc28a614
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jun 29 17:09:11 2011 +0200

    Autoconf script code refactory
    
    * Added ax_python_modules.m4;
    * fixed various things related to Python and boost_python presence;
    * implemented check for Sadic.

commit 4644cd92181a4e919fd7335d88eefb8bf6d95259
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jun 29 15:28:24 2011 +0200

    Added python and boost_python in configure.ac

commit 854e8dbf3f534c9ba6395ba59745e10560c813a4
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jun 29 15:28:03 2011 +0200

    Better implementation in configure.ac

commit e349f2175aa812cedbcfb471fe5c6b7081bc5345
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Jun 17 17:58:10 2011 +0200

    Run button sensitive after opening

commit d8d860dd91afd9fe40ebe3a907770c5f46eca214
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 28 18:03:27 2011 +0200

    Fixed race condition?

commit 455f90019c40efbabd2d06e69eccaf8c06c9b1b1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jun 8 15:28:28 2011 +0200

    Uninitialized variable
    
    Race condition brings to a possibly uninitialized currentFrame.

commit af785e808cc4c81cf966687662b7aee1bc7779d2
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Jun 8 15:06:58 2011 +0200

    Fixed interface problem
    
    Now NewAnalysis window moves up when adding progressbar if it was adjacent to the screen borders.

commit 44ee1090dbf2cb43e6dcd9f64555f5d34a27f829
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 17:26:23 2011 +0200

    Updated changelog

commit aab7e95e9ef9a09d6086172c672d283c32812f1e
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 17:20:46 2011 +0200

    Remove sas.psf after opening a session

commit a6898507054344fe1a06845ceaa7a1439a98066b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 17:18:18 2011 +0200

    Fixed begin and end spins/scrolls
    
    They didn't work correctly when opening an old session.

commit 4ced77b936cb7716d10795c8bd6c0fdc7e225445
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 17:08:03 2011 +0200

    Off by one in getFramesCount

commit 6a604ee9b0c002ad74843d0b2931fc42e5911cea
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 17:01:54 2011 +0200

    Begin and end time for the analysis can be used
    
    Thanks to this and some previous commits.

commit 717306e91fc16da7428a0e147956890d85842a1a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 16:58:13 2011 +0200

    Fixed bug in Gromacs::getTimeStep
    
    Strange behaviour of GROMACS using different trxframe objects.

commit cf50ddd4722ef8887a2133f52054d9e5d83c2904
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 16:52:03 2011 +0200

    Saved file must be truncated, not appended

commit 55d3ae247469edec209480e0d90d01a48143de6d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 16:35:01 2011 +0200

    timeStep is cached and fixed
    
    Before this commit timestep took only the time of the second frame. Now subtract from this value the time of the first frame.

commit b8c1b55875dbfef993caf41fcef1426e6243e1ce
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Jun 7 11:04:59 2011 +0200

    Added getBegin and getEnd in class Gromacs

commit fddccac922274a4d664cae2f812052b4c3d45975
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 31 12:59:22 2011 +0200

    Updated changelog

commit 83b04d511938b7d98cd788b8bfee0eb8035a7005
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 31 12:48:25 2011 +0200

    Lots of changes and fixes
    
    * Added Gromacs::setAverageStructure;
    * handling of buttonOpen in MainWindow;
    * added NewAnalysis::openSessionFile;
    * Pittpi is run using a separate thread;
    * added reference to central residue in Group;
    * added time-based information about pockets;
    * handling Pittpi status with mutex and condition;
    * some const issues;
    * changed extension of sas temp file from csf to psf (partial session file);
    * GROMACS < 4.5 now are set as unsupported (they will be supported in future);
    * set program title;
    * fixed locale problem with GROMACS files;
    * handling of session file;
    * minor issues.

commit f5acfa79eb9408e305e418787201f4b0d5f89e7d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Sun May 22 17:40:44 2011 +0200

    Session file saving implementation in GUI
    
    Also other minor things like parameter checking and a code refactoring in Pittpi.cpp

commit 5bde641ddae1c9c3eac74bc3fedd339e5adc16f6
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri May 20 19:11:16 2011 +0200

    Implementations and fixes
    
    * Implemented calculateAverageStructure;
    * pdb is dumped and loaded using Angstroms;
    * some fixes to correctly see the status of calculateAverageStructure;
    * implemented Pittpi calculation;
    * changed frame calculations. NOTE: it's still wrong! (sorry, just noticed);
    * better Pittpi log;
    * protein.size() -> nAtoms optimization;
    * FIXED: cTmp is referenced using an integer pointer;
    * FIXED: step could be used uninitialized;
    * FIXED: strange condition during witch maxFrame was null;
    * FIXED: threshold must be taken as Angstroms;
    * FIXED: couple of problems with mutexes, semaphores and conditions;

commit d52a013d7e7582a5327db4dd663245c885cd870d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 19 10:55:13 2011 +0200

    Lost a couple of lines during last commit

commit 4b71c2f8375f9005696b06f0833d2c6b1e20506e
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 19 10:10:28 2011 +0200

    Addedd license and various useful files

commit 760ab63878a62cb698078d56a7bd1d5e8c106531
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 19 07:19:22 2011 +0200

    Fixed graphics glitches
    
    I used a dispatcher to send signals about starting end stopping spinning.

commit 1d2234a82008f538fe6b2b012da48ac0c000232d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 19 03:23:48 2011 +0200

    Lots of implementations and fixes
    
    * Added non-const getGroup (checks for the topology);
    * gromacs-related parameters in Pittpi are not const anymore;
    * implemented Protein::getTypeByName;
    * implemented PDB loading with new Protein constructor;
    * implemented Protein::dumpPdb;
    * implemented Protein::getAtomByIndex;
    * implemented Protein::getResidueByAtom;
    * first implementation of basic log;
    * optimized code using variable m_end;
    * FIXED: check for gotTopology before calling getTopology;
    * FIXED: raised limit to strncpy to 5;
    * FIXED: frames must start from 1;
    * FIXED: semaphore count check before waking up operation thread.

commit ceff1ca0ff10475513389a3e5e61671b851cebd8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 17 15:53:06 2011 +0200

    Created a fast frame counter
    
    It's a simple workaround: we take the atoms count as reference, then we get the second frame "step", we seek the last position of the file, search for the atoms count and get it's subsequential number (the step). This will give the number of frames.

commit ebce744509f8a105d5be088fabd2b5cc308aca58
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 17 12:20:00 2011 +0200

    Lots of code refactory and bug fixes
    
    * curChunks is not more used. It's better pushing and popping elements;
    * filters and archives are declared class-wide;
    * FIXED: fileIO is always opened with "binary" flag;
    * FIXED: missing openThread stopping;
    * FIXED: using peek() to detect EOF;
    * FIXED: number and size of chunks.

commit 3d21410bc5457fee8be3ff55a37709692754be9b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri May 13 11:45:40 2011 +0200

    Various fixes and implementations
    
    * Implemented every pocket parameter calculation;
    * FIXED: using getTimeStep instead of getFrameStep;
    * FIXED: some uninitialized data;
    * FIXED: sas must have been pushed;
    * FIXED: missing counter for sas mean calculation;
    * FIXED: a couple of memory leaks;
    * FIXED: curChunk shouldn't be reassigned if open() returns false.

commit bc81d47b72347c509271c1268161057876ea68e0
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 12 18:46:19 2011 +0200

    Fixed couple of things in Pittpi

commit c0b41d66a9e866e5f78d85baff07336ea6939a1b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 12 17:41:16 2011 +0200

    Continuing implementation of Pittpi algorithm
    
    * Added sortByZeros function to Group;
    * Added struct Pocket;
    * Implemented mean recalculation for sas;
    * Partially implemented pocket recognition.

commit 3c77bca7f221fd1f6f7aeb6bcad681ca9d9a04e3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 12 15:56:58 2011 +0200

    Part of Pittpi algorithm put in fillGroups

commit 36ef4649a892250a2bf1309c0d4890081d2e6205
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 12 14:55:22 2011 +0200

    Lots of fixes. Now it should be quite stable.
    
    * Added getGroup in Gromacs class;
    * Added waitOperation;
    * SasAtomSerializable have been implemented completely inside SasAtom;
    * Added semaphore waiting system in SasAnalysis::operator >>;
    * Added control for empty circular buffer in SasAnalysis::operator >>. It should also work for EOF handling;
    * Added file status control in SasAnalysis::open;
    * FIXED: group selection now uses GROMACS snew instead of new[] operator;
    * FIXED: operator >> in SasAnalysis must return a reference to the class instance and accept a reference to SasAtom;
    * FIXED: using "protein" group for Pittpi operation instead of getAtomsCount -- it considers EVERY atom of the box;
    * FIXED: wrong loop condition;
    * FIXED: semaphore handling in SasAnalysis::operator >>. It must start with value 0 instead of bufferSemaphoreMax. Consequently different part of code have been changed to avoid semaphore problems;
    * FIXED: using curChunk in SasAnalysis::operator >> instead of popping from chunks;
    * FIXED: missing operationThread->wakeUp in SasAnalysis::operator >>;
    * FIXED: loadChunk(in) must be pushed, not assigned;
    * FIXED: loadChunk must use unsigned int instead of unsigned long;
    * FIXED: SasAtom size is nAtoms, not "size";
    * FIXED: added missing code after parent->open() in OperationThread::threadOpen.

commit e0db193d64ac628056d1f50e3ca065e7e966d6be
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed May 11 18:18:00 2011 +0200

    Lots of fixes and a couple of improvements
    
    * Added zeros and getCentralH Group
    * reference in Group is an Atom now
    * passing sas analysis filename to Pittpi
    * added sas to PdbAtom
    * initial support for Pittpi algorithm
    * implemented an untested method to know when a SasAnalysis reached EOF
    * FIXED: oenv if now freed using GROMACS sfree. This should avoid memory leaks.
    * FIXED: missing close_trx
    
    Still lots, lots, lots of bugs.

commit 5f4cec2083dd85bcde80354b1bb304d9db34fc4c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 10 17:42:07 2011 +0200

    Fixed condition with PRO

commit 6eab191e1e9ace4cbaf3d7c98fd53e4dfbb36ba3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 10 16:10:15 2011 +0200

    Group class implementation and various fixes
    
    * Added Group class
    * Added Silvia Bottini inside Pittpi references
    * FIXED: makeGroups must return a vector of Groups, not of Residues
    * FIXED: passed threshold instead of radius to makeGroups
    * FIXED: discarded first aminoacid (every AA with H1)
    * FIXED: used getAtomByType instead of a redundant loop
    * FIXED: double control of "C" atom
    * FIXED: used a counter to calculate sidechains center

commit 33c4ed5ae6b4b4250a4365208a7666a0be02b7b8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 10 14:49:20 2011 +0200

    Pittpi initial implementation + fixes
    
    * Added some operators to Atom structure;
    * Added getAtomByType to Protein;
    * Added stub of Pittpi class;
    * Added Pittpi::makeGroups;
    * FIXED: getAverageStructure is const;
    * FIXED: __calculateAverageStructure shouldn't be called directly. It was here just for testing purposes.

commit 19649fb55f0e01b0f64ebc26dc1a0b6c7035c46a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon May 9 16:11:40 2011 +0200

    Fix + short implementation
    
    * Changed name of getAverageStructure in calculateAverageStructure;
    * Implemented getAverageStructure

commit c5e74c55eaaf6c8c8eea7c31b195beb0255b1b81
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon May 9 15:52:07 2011 +0200

    Couple of minor things
    
    * Added "ps" to the threshold parameter
    * Corrected mispelling of "threshold"

commit e180c89995d848fc84c2c8041bb125e7a52369f7
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon May 9 15:45:25 2011 +0200

    averageProtein added to Gromacs properties
    
    Still missing getProtein methods. I will implement it later. Maybe.

commit a2ded7b4f364b8dece09450068a45a7919b40306
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon May 9 13:27:37 2011 +0200

    Added some analysis parameters

commit 356f1258aacd65252dde3f1b13114ba672738adb
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon May 9 12:25:55 2011 +0200

    Better GROMACS headers compatibility
    
    They use a signed index for residues. Changed behaviour for coherence.

commit 8fcea1b4aad8d57cff1b8d188d21e60bd61dc84c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri May 6 13:20:14 2011 +0200

    Couple of improvements + fix
    
    * Added "unknown" aminoacid
    * Added a translation system for uncommon aminoacid nomenclature (see Amber)
    * Changed behaviour for to access residues and atoms inside a protein object. Now every problem related to atom references should be fixed/avoided.
    * FIXED: using different AA index instead of AA type to determine a new aminoacid

commit 6380b27d3e567eb8eb947c451eabc20389cd4332
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 5 19:03:19 2011 +0200

    Implemented the protein in getAverageStructure
    
    * Changed from unsigned char to char for type in PdbAtom
    * Implemented type in Residue
    * Code refactoring for appendResidue. STILL DOESN'T WORK!
    * Protein is built inside __getAverageStructure
    
    There are still some problems around protein->atoms references. This is probably related to memory reallocation of residues vector. I still miss a simple way to handle realtime referencing in a safe way.

commit 58bb1dfe40c4d9c3a55185311bcc781438506349
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu May 5 16:41:44 2011 +0200

    Missing atom type

commit b3b75d68fec439721ed8d46b6a710218cdf7cf45
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed May 4 15:33:18 2011 +0200

    Fixed two memory leaks

commit 855c0c3c56586eb19ba85b92b83a84ecd2fb8695
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed May 4 15:08:16 2011 +0200

    Initial support for getAverageStructure + fixes
    
    * Moved rerefences to gromacs header files from Gromacs.h to Gromacs.cpp if unneeded there. Also removed C reference to these files, because I noticed they are C++ headers;
    * New method readNextX. It's a wrapper to gromacs read_next_x. The method should be version-indipendent and should close and reopen the trajectory when finished.
    * Initial getAverageStructure method. The Protein "building" is still missing, but average calculation should work
    * FIXED: area and surfacedots must be initializated;
    * FIXED: aminoacidLetter and aminoacidTriplet must be const

commit 052df9d954e1b766296daed0a938fce44e28ae5d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed May 4 11:32:24 2011 +0200

    Changed Protein behaviour

commit 7e795834306640c40bc902e2bc876b8669dfed94
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 3 17:09:32 2011 +0200

    Inserted basic structures for protein handling
    
    It should be possible to handle proteins and PDBs.

commit 064c91496bdb79a8330c4bc24df8a30119ee0d81
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 3 16:14:22 2011 +0200

    Fixed a couple of things
    
    * Gromacs now uses boost::bind instead of boost::ref for threads
    * Changed a simple deallocation with Gromacs sfree. It seems to not work as the std free function...

commit c12fb4c1e7ab2b72321912f633adfb7558c2cf17
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue May 3 14:59:36 2011 +0200

    Changed name to pstpfinder

commit aa8b3d259fcaad54be87b9bb4bc274280815de62
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Apr 20 11:54:18 2011 +0200

    Still writing open mode
    
    Also changed a mutex locking behaviour that could bring to race conditions.

commit 42b589f70aa8683ba66d0a3e415c1508661db122
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Apr 19 16:05:33 2011 +0200

    Initial implementation of Sas opening methods
    
    * SasAtomSerializable has an empty constructor too
    * Fixed a missing "public" inheritance
    * open and loadChunk in SasAnalysis
    * Fixed some missing std references

commit a0db332e3d0d7c7a44357cb5b9629ff480c7fac6
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Apr 19 12:07:58 2011 +0200

    Changet SaveThread to OperationThread
    
    Now a ThreadOpen can be implemented

commit d4a382be7df0060ff6111026704dd39f446c32ee
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Apr 19 11:12:56 2011 +0200

    Changed SasAnalysis thread handling
    
    Now it is used a normal member, not the callable class anymore.

commit 0abbc93a4e868a1e251c54c58903b0ff866123ee
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Apr 19 11:12:19 2011 +0200

    Fixed missing updateChunks call

commit a34bdc3efd6bab3f37e6a8544b0fdcf2bed6560c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Apr 18 17:41:18 2011 +0200

    Changed max Bytes and Chunk behaviour
    
    Now these are not passed using constructor anymore. There's a default value that can be changed using set* methods until the class is used in writing mode or flushed.

commit ffc08cebd6cf01dec99f3d80312eee815d1b09f3
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Apr 18 17:13:10 2011 +0200

    Changed default filename
    
    I wanted to use an unique session file, but this could need a rewrite of the class structure. I think I'll continue developing everything in splitted files, then, maybe in the future, I'll change everything and let the Gromacs class handle the unique file. Related class will have only a stream they use to read and write their "work". It's not easy because I need to write a particular device that doesn't allow to work outside particular buffer regions. Nowadays there are other priorities.

commit 3588d4730e9d83fb2a41bb10ec09573ab27a22d8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Apr 15 18:05:06 2011 +0200

    Various fixes
    
    * Started using GLibmm
    * Migrating from executable classes to boost::bind to handle multithread in a better way
    * Now getTimeStep and getFrameStep use read_x_frame instead of read_x_xtc. It seems there was something wrong in memory handling, because GUI gave lots of errors
    * Better spinner handling. Now it's created only if it's missing and other controllers are hidden or disabled. There are still some problems that must be fixed
    * iteration() have been used in blocking mode while events_pending() is true
    * Now NewAnalysis::operator ()() is NewAnalysis::threadTrajectoryClicked()

commit 172154157357dd30923ad7b41e8fef5acdbea889
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Apr 14 17:42:02 2011 +0200

    Spinner works
    
    Now when loaded a trajectory a spinner is... spinned.

commit 82dfabff290c88f73c8bb6bed0820ae0f8deecab
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Apr 14 16:43:37 2011 +0200

    Fixed a problem when saving
    
    Now is checked if save() returns true or false

commit 0ff041167a095df493a479bf4824f713afa27b16
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Apr 14 15:54:19 2011 +0200

    Various improvements
    
    * Missing Gromacs.calculateSas()
    * New and getFrameStep, getTimeStep
    * Bound begin and end to setBegin and setEnd methods
    * waitNextFrame now will block only if the current frame is less than the number
     of frames
    * 3 digits on begin and end spin
    * Ranges are now related to MD time

commit ade6dab7926b9c672d38e7b221d8bcb7d10392aa
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Apr 13 17:22:00 2011 +0200

    Added begin and end to GUI
    
    They must be implemented

commit 9a4a052a9da6834c3006c8b4bda7c672cd861254
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Apr 8 16:14:27 2011 +0200

    No open static method anymore

commit 30bea63ec80ecdb2e424109cc5c76fd31c81e3ef
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Apr 8 15:35:12 2011 +0200

    Rearranged SasAnalysis arguments
    
    With "open mode" is more important the kind of IO instead of the allocable ram

commit 647508ffd6a7a5581def9ce04b02ce597aa138c2
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Apr 8 15:17:38 2011 +0200

    Implemented saveMode in SasAnalysis

commit 558c29ae71425fecf8442eb052e842febd15a1a8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Apr 8 11:16:00 2011 +0200

    ProgressBar inside NewAnalysis
    
    Simple, but should work correctly

commit 51f96b5c169b60564c68c8dd136b5692e189d524
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Apr 6 18:00:52 2011 +0200

    Added EOL on some EOF

commit 56917577d9e36ddd8db2028d422cbeb1bbefc52a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Apr 6 17:54:35 2011 +0200

    Support to get current frame number
    
    In Gromacs now the current frame number is saved (index-0 based) and can be asked usign getCurrentFrame(index-1 based -- it's the GROMACS' way!)
    Fixed the count number if a new trajectory is loaded
    Naturally the "current frame" variable is thread-safe!

commit 9cc66e8170f262c71cd361a0a40dc420662cabe8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Apr 6 17:31:31 2011 +0200

    Cached number of frames in Gromacs
    
    Now getFramesCount uses a cached value

commit 6de47658ed7e3bd42466e26ce4cc4f60da22d445
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Apr 6 17:27:46 2011 +0200

    Added getFramesCount to Gromacs
    
    Now it is possible to get the number of frames of a trajectory

commit 6c7a846e0a805ca22782030bf161d836243f01d7
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Apr 5 16:09:39 2011 +0200

    Started with multithread calculateSas
    
    An initial implementation to let calculateSas run indepentently from the GUI. This will allow to have a progressbar and details about "WTF is happening in background"

commit 5b6eefdc4bb2daa054b413b152a8a021b6345660
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Apr 5 12:57:19 2011 +0200

    Fixed some mutex-related problems
    
    Now the program flows correctly. Still don't know if it really works. Controls related to data integrity and auto-saving must be done.

commit b09fe95aaba94f01d14a75ab39f016fa823a2842
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 31 12:40:36 2011 +0200

    Better configure scripts handling
    
    Added an explicit system for debugging/optimization handling.

commit bae8f01b3613b1b59323426a5f35c77487e12554
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Mar 30 17:59:29 2011 +0200

    Semi-working implementation of autosave
    
    It still doesn't work. There are some problems related to mutexes and semaphores. I'll have a look.

commit 322b356754edbe7f78fcb7169d02becac3a39e8b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Mar 29 17:32:31 2011 +0200

    Started using circular buffer
    
    A very preliminary implementation to use a circular buffer on SasAnalysis. This will let the program to periodically save calculous on hard disk.

commit 31e2218b7e181efc7d170edf38e6dc5ba41458df
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 25 19:41:29 2011 +0100

    Rearranged Gromacs code
    
    Redistribuited some code in getTrajectory and getTopology. This allows to recall these codes later. It also allow to run some procedures outside calculateSas.
    oenv has again a class-wide scope (with LOTS of other variables!).

commit 668cda94144eed3b77b60158d81d205f121d515b
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 25 17:03:21 2011 +0100

    Saving system based on boost libs
    
    A simple system for data dumping have been implemented using boost serialization and iostreams (for zlib compression).
    This system is not architecture-portable, because of the width of basic data structures and endianess. Maybe a day I will write a filter to convert also data endianess.

commit 9361e7d91b34dcb58a9a467341d5ee67391bfad9
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Mar 16 10:52:53 2011 +0100

    Missing libboost_iostream in LIBS

commit 5b834ab5c00dae79f82b3399f7e36679af700523
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Mar 14 14:56:46 2011 +0100

    Missing boost.m4

commit 8e58f13d3d283b79932b5699e389a0c243d1e9b9
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Mar 14 13:47:44 2011 +0100

    Implemented Boost::thread and libtool

commit e0064443d43eee4b06f52d6f378dc636781b23d9
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Mar 14 13:07:25 2011 +0100

    SasAnalysis missing return value

commit 4c09704cc06573a85cb20bda952bd503f48b467d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Mar 14 12:33:22 2011 +0100

    Handling gromacs errors could be difficult
    
    Added a comment that explains the problem...

commit 3d8313a00546ac192b6b706fe37e1a35457a1eda
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Mon Mar 14 12:30:49 2011 +0100

    C Exception handler object
    
    Simple to use: initialize it inside a scope where you think the library could segfault, than destroy it. If a sigsegv is catched the function will print an error and terminate the program.

commit bc3f3a73362c0f35f97ac45075ac89bfbbaace3e
Author: edoardom <edoardom@orione.SBLab.intra>
Date:   Mon Mar 14 10:29:52 2011 +0100

    Missing reference to gmx library

commit 7492d5089b593c6b2079174c8868a32673aa5778
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 19:26:54 2011 +0100

    Implemented SasAnalysis object inside SAS analysis

commit 1969402d65982e162be08838153a196ef6eccf13
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 19:26:30 2011 +0100

    When did I added the binary file?

commit 71c6eed9a81ed2f53a15606446b1b0d29d0c8f36
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 18:41:00 2011 +0100

    Reference to Gromacs namespace added

commit 1828415ad1fc4d59c3ab2c40a6ecb221526f4d06
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 18:15:49 2011 +0100

    Create a new basic class for Sas data exchange

commit 440bf91a453ee02c2f0390fb141a217eeafdc981
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 18:09:22 2011 +0100

    A couple of changes
    
    * It's possible (and easy) to get atom coordinates and sas
    * Removed one useless index
    * bDGSol always false. For now we don't calculate it -- I really don't know what can I do with DGSol value...

commit 5b2779ba6d77762aa9c8cd0ff1a60ba1c4baf7a7
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 17:32:08 2011 +0100

    Basic structure for atom coordinates+sas handling
    
    A new structure called Atom contains spatial coordinates. SasAtom inherits Atom and adds the sas value.

commit af7cf111d6e54d2f8d4e2cd9fe4f0904a0653df1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 17:27:37 2011 +0100

    Fixed a wrong property request
    
    Asked for a epropVDW instead of epropDGSol.

commit 9464d6eb7a7af293f54880541e849f610126241c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 16:57:35 2011 +0100

    Added memory deallocation; new sas target approach
    
    Now memory should be handled correctly in calculateSas.
    A dynamic way for SAS targeting have been added. There's no way to handle it for now -- it's simply initialized inside Gromacs::init() function.

commit 3a03535bcb0ed97c51369cd54da448974ef33f60
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Mar 11 15:39:29 2011 +0100

    Make calculateSas works automatically on protein
    
    Using analyse code from gmxlib/index.c of GROMACS a couple of atom indexes have been created and can be used automatically to work with nsc_dclm_pbc.

commit 7633537707ae76a0045b89187787c6f008912329
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 10 16:08:22 2011 +0100

    Written a base for calculateSAS
    
    This is completely taken from gmx_sas.c. Lots of changes must be done. First of all a dynamic way to handle atom indexes must be written. Then we have to work on data saving. A hybrid disk/ram handling would be great.

commit 13ecc33a9db00895874ecccb06716af87e0cf4b6
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 10 16:06:42 2011 +0100

    Added GROMACS_ANALYSIS in configure.ac
    
    I forgot to add it in the last commit

commit e9e6dc3d4100fa060506b5e828da0048a65a6697
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Mar 8 20:49:00 2011 +0100

    Fixed other things on gromacs m4 script

commit f10abc35aa0ab630a035ddf92826c28b056898f1
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Mar 8 16:11:53 2011 +0100

    Missed changes to configure.ac.

commit 262666850b58ec9259271159e0d7a8c906cbf80c
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Tue Mar 8 12:40:33 2011 +0100

    Started working on SAS. Various changes.
    
    * "main" files changed to "trapof" due to conflicts with GROMACS headers
    * Added namespace for everything regarding GROMACS
    * Now output_env_t is handled directly by the calculateSas method
    * calculateSas have been started. We need to implement things from sas_plot

commit 56138b7b25fda6392b5428aa6728b576b54dc457
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 3 17:34:45 2011 +0100

    Started writing Gromacs implementation code
    
    Only a few lines written 'till now.

commit 475cc2a5da3510f71cbd4b2d6fb2eadfc4f9f3ef
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 3 16:25:21 2011 +0100

    Local include directory first
    
    The code didn't compile correctly only because there is a main.h somewhere in inside included directories. I didn't notice it because I'm working with codelite.

commit 92dacfd4e5e7733620d648f72561ea2fd222989d
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 3 15:26:16 2011 +0100

    Renamed close_app in closeApplication
    
    Let's avoid using old C-style names...

commit 68d89a711b8bd5c236301085a607700abf9986fd
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 3 15:18:41 2011 +0100

    Added Run button and fixed some things
    
    The Run button have been added in NewAnalysis window and a couple of modifies have been done to simplify closing the application. Now it can be done directly setting a callback function to close_app.

commit c3f87a37fb697dfb4518b5d1e0aa0f4cf01dccf7
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Thu Mar 3 12:16:45 2011 +0100

    Implemented few things in NewAnalysis window
    
    Added two file chooser and re-organized main things about program flow handling. Now a function called close_app exists and allows to quit from the program. Actually it's used by the delete callback method of MainWindow window.

commit 201860f50a96652c29881c2c9433ea7cdb1fe19a
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Mar 2 22:22:58 2011 +0100

    Added a base for a new analysis
    
    Only a file chooser have been implemented 'till now.

commit 0cddc98039af84f23d99b8c1372693f7513fec22
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Mar 2 20:53:10 2011 +0100

    Removed "this->" references.
    
    I really don't know if it could be a good idea, because using "this" avoids conflicting variables. However I shouldn't need it if I write a good code. Isn't it?

commit 8f8ecf95b387d22a5a7680543ae82296c9661dcd
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Mar 2 20:24:10 2011 +0100

    Missing things in autotool files
    
    Inserted reference to include directory and MainWindow.cpp source file.

commit 0f3913b9437c004cd9a59803954ea448860af134
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Wed Mar 2 19:55:19 2011 +0100

    Started with something useful.
    
    Wrote what will be the first window of the program. From here you will be able to have a new analysis or open an existent one.

commit 5690a7c803a4631355aa9ad7b6a90752a7c88002
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Feb 25 16:24:38 2011 +0100

    Created the base main.cpp to implement GTKMM.

commit 2cec1ddc9d332b12746966d7628941efe1198395
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Feb 25 16:01:43 2011 +0100

    Added gtkmm-2.4 dependency in configure.ac

commit c597f38e6ac5ade3eae19cf72eb5646ed4d83b28
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Feb 25 14:57:26 2011 +0100

    Added an m4 script for gromacs.
    
    This is a script developed some time ago that helps compiling programs with GROMACS libraries and headers. It have been included in configure.ac and Makefile.am.

commit a9ca6e70a7077900309dca5bb21bd9eee98e78f8
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Feb 25 14:50:07 2011 +0100

    Created some basic autotools configuration files

commit 2757a646ffd94fcbef365f4ddc4481beaa748484
Author: Edoardo Morandi <morandidodo@gmail.com>
Date:   Fri Feb 25 14:41:40 2011 +0100

    Starting new TraPoF project
